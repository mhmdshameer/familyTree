import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google"; // Restore font imports
import "./globals.css";
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import { httpBatchLink } from '@trpc/client';
import { trpc } from '../utils/trpc';

// Restore font definitions
const geistSans = Geist({ variable: "--font-geist-sans", subsets: ["latin"] });
const geistMono = Geist_Mono({ variable: "--font-geist-mono", subsets: ["latin"] });

// Define query and tRPC clients
const queryClient = new QueryClient();
const trpcClient = trpc.createClient({ links: [httpBatchLink({ url: '/trpc' })] });

export const metadata: Metadata = { title: "Create Next App", description: "Generated by create next app" };

// Add back the children type
export default function RootLayout({ children }: Readonly<{ children: React.ReactNode }>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <trpc.Provider client={trpcClient} queryClient={queryClient}>
          <QueryClientProvider client={queryClient}>
            {children}
          </QueryClientProvider>
        </trpc.Provider>
      </body>
    </html>
  );
}